@using komp.Models
@using komp.Models.tipai
@model komp.Models.Item
@using System.Text.RegularExpressions


<style>
    tr:nth-child(even) {
        background: #CCC
    }

    tr:nth-child(odd) {
        background: #FFF
    }

    img {
        max-width: 100%;
        max-height: 100%;
    }

    #divspec {
        border-style: inset;
    }

    #num {
        color: #0a74ca;
        font-size: 24px;
        font-weight: bold;
        position: center;
        right: 20%
    }

    .centered {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: red;
        font-size: 200%;
    }

    .container {
        position: relative;
        text-align: center;
    }

    .img {
        position: relative;
        text-align: center;
        display: inline-block;
        width: 200px;
        height: 200px;
    }

    .table {
        padding-left: 20px;
        background-color: white;
        text-align: left;
        display: block;
        padding: 0px;
    }
    th {
        padding-left: 20px;
    }
</style>
<div class="content">
    @if ((Session["Role"] is null))
    {

    }
    else if (Session["Role"].Equals(Role.Admin))
    {
        <input type="button" value="Redaguoti prekę &raquo;" onclick="location.href = '@Url.Action("EditItemIndex", "Item", @Model)'" />
    }
    @{
        <div id="divspec">
            <div class="container">
                @if ((Session["Role"] is null))
                {
                    <img class="img" src="~/Assets/images/Items/@Model.path">
                }
                else if (Session["Role"].Equals(Role.User))
                {
                    <img class="img" src="~/Assets/images/Items/@Model.path">
                }
                else if (Session["Role"].Equals(Role.Admin))
                {
                    if (Model.matomas)
                    {
                        <img class="img" src="~/Assets/images/Items/@Model.path">
                    }
                    else
                    {
                        <img style="filter: grayscale(100%)" src="~/Assets/images/Items/@Model.path">
                        <div class="centered">Nematoma</div>
                    }
                }

            </div>

            <div id="num"><p>@Model.kaina €</p></div>
            <input style="background-color: greenyellow" type="button" value="Į Krepšelį &raquo;" onclick="location.href = '@Url.Action("ToCart", "Item", Model)'" />

        </div>
    }


    @{
        var data = Regex.Split(Model.aprasymas, @"\%\$");
        List<string> table = new List<string>();
        var pav = "";
        for (int i = 0; i < data.Length; i++)
        {
            if (i > 0)
            {
                var sdata = Regex.Split(data[i], @":");
                for (int a = 0; a < sdata.Length; a++)
                {
                    table.Add(sdata[a]);
                }
            }
            else
            {
                pav = data[i];
            }
        }

    }

    <div id="divspec">
        <div>
            <h2>@pav</h2>
            <table>
                @for (int i = 0; i < table.Count / 3; i++)
                {
                    <tr class="table" style="background-color:white;">
                        <th>  @table[i * 3]: @table[i * 3 + 2]</th>
                    </tr>
                }
            </table>
        </div>
    </div>

    @if (!(Session["Role"] is null))
    {


        if (Session["Role"].Equals(Role.Admin))
        {
            <p>matomumas: @Model.matomas</p>
            <input type="button" value="Keisti matomumą &raquo;" onclick="location.href = '@Url.Action("DisableItem", "Item", Model)'" />
            Html.RenderPartial("~/Views/Comment/NewComment.cshtml", new Comment(), new ViewDataDictionary { { "itemId", Model.id }, { "userId", ((User)Session["User"]).id }, { "comment", new Comment() } });
        }
        else if (Session["Role"].Equals(Role.User))
        {
            Html.RenderPartial("~/Views/Comment/NewComment.cshtml", new Comment(), new ViewDataDictionary { { "itemId", Model.id }, { "userId", ((User)Session["User"]).id }, { "comment", new Comment() } });
        }
    }
    @Html.Action("Index", "Comment", new { itemId = Model.id });
</div>
